BehaviorTree tree = BehaviorTreeBuilder("")
.RepeatUntilFail("Base loop")
.Selector("Find an entrance")
.Sequence("Try door")
.Not("Way is not blocked")
.If("Is way blocked",[]() { return false; })
.Do("Go to door", []() { return EStatus::ERROR; })
.Selector("Open door selector")
.Do("Open door", []() { return EStatus::ERROR; })
.Do("Unlock door", []() { return EStatus::ERROR; })
.Do("Break door down", []() { return EStatus::ERROR; })
.End()
.Ignore("Try to close door")
.Do("Close door", []() { return EStatus::ERROR; })
.End()
.Sequence("Check if anyone comes")
.Wait("Wait for people to come", 0)
.If("Someone came",[]() { return false; })
.Do("Ask them to open door", []() { return EStatus::ERROR; })
.End()
.Sequence("Try window")
.Do("Go to window", []() { return EStatus::ERROR; })
.Do("Open window", []() { return EStatus::ERROR; })
.Do("Close window", []() { return EStatus::ERROR; })
.End()
.End();